[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "wappa"
version = "0.1.4"
description = "Open Source Framework to develop smart Workflows, Agents and full chat applications through WhatsApp"
authors = [
    {name = "Sasha Canal", email = "contact@mimeia.com"},
]
readme = "README.md"
license = {file = "LICENSE"}
requires-python = ">=3.12"
keywords = ["whatsapp", "chatbot", "webhook", "messaging", "business-api", "agents", "workflows", "ai-agents"]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: Apache Software License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.12",
    "Topic :: Communications :: Chat",
    "Topic :: Internet :: WWW/HTTP :: HTTP Servers",
    "Topic :: Software Development :: Libraries :: Python Modules",
]

# Core dependencies - minimal for basic functionality
dependencies = [
    "fastapi>=0.115.0",
    "uvicorn[standard]>=0.24.0",
    "hypercorn>=0.17.0",
    "pydantic>=2.8.0",
    "pydantic-settings>=2.10.0",
    "python-dotenv>=1.0.0",
    "python-multipart>=0.0.6",
    "aiohttp>=3.11.0",
    "aiofiles>=24.1.0",
    "typer>=0.9.0",
    "rich>=13.0.0",
]

[project.optional-dependencies]
# Redis cache support
redis = [
    "redis>=5.2.0",
]

# Database support
database = [
    "sqlmodel>=0.0.24",
]

# AI/ML features
ai = [
    "openai>=1.69.0",
    "numpy>=2.2.0",
]

# Image processing
media = [
    "pillow>=11.1.0",
    "opencv-python-headless>=4.11.0",
]

# Development tools
dev = [
    "pytest>=8.4.0",
    "pytest-asyncio>=1.1.0",
    "ruff>=0.9.0",
    "black>=25.1.0",
    "mypy>=1.0.0",
    "pre-commit>=3.0.0",
]

# Full installation with all features
all = [
    "wappa[redis,database,ai,media]",
]

[project.urls]
Homepage = "https://wappa.mimeia.com"
Documentation = "https://wappa.mimeia.com/docs"
Repository = "https://github.com/sashanclrp/wappa"
Issues = "https://github.com/sashanclrp/wappa/issues"
Changelog = "https://github.com/sashanclrp/wappa/blob/main/CHANGELOG.md"

[project.scripts]
wappa = "wappa.cli.main:app"

# Hatchling configuration
[tool.hatchling.build.targets.wheel]
packages = ["wappa"]

[tool.hatchling.build.targets.sdist]
include = [
    "/wappa",
    "/README.md",
    "/LICENSE",
    "/CHANGELOG.md",
]
exclude = [
    "*.pyc",
    "__pycache__/",
    "/.git/",
    "/examples/",
    "/tests/",
    "/.pytest_cache/",
    "/.coverage",
    "/htmlcov/",
    "*.log",
]

# Development dependencies (uv)
[dependency-groups]
dev = [
    "pytest>=8.4.1",
    "pytest-asyncio>=1.1.0",
    "ruff>=0.9.0",
    "black>=25.1.0",
    "mypy>=1.0.0",
    "pre-commit>=3.0.0",
]

# Ruff configuration
[tool.ruff]
target-version = "py312"
line-length = 88
indent-width = 4

[tool.ruff.lint]
select = [
    "E",   # pycodestyle errors
    "W",   # pycodestyle warnings
    "F",   # pyflakes
    "UP",  # pyupgrade
    "B",   # flake8-bugbear
    "SIM", # flake8-simplify
    "I",   # isort
    "N",   # pep8-naming
    "C4",  # flake8-comprehensions
]

ignore = [
    "E501",  # line too long (handled by line-length)
    "B008",  # do not perform function calls in argument defaults
]

exclude = [
    ".git",
    "__pycache__",
    "build",
    "dist",
    "*.egg-info",
    "examples",
    "tests",
    ".pytest_cache",
]

[tool.ruff.format]
quote-style = "double"
indent-style = "space"
skip-magic-trailing-comma = false

# Black configuration
[tool.black]
target-version = ['py312']
line-length = 88
skip-string-normalization = true

# MyPy configuration
[tool.mypy]
python_version = "3.12"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true

[[tool.mypy.overrides]]
module = [
    "redis.*",
    "openai.*",
    "cv2.*",
]
ignore_missing_imports = true

# Pytest configuration
[tool.pytest.ini_options]
asyncio_mode = "auto"
testpaths = ["tests"]
python_files = "test_*.py"
python_classes = "Test*"
python_functions = "test_*"
addopts = "-v --tb=short"